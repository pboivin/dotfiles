snippet php
	<?php

	${0:${VISUAL}}
snippet ?=
	<?= ${0} ?>
snippet ?php
	<?php ${0} ?>
snippet ?foreach
	<?php foreach ($${1:vars} as $${2:$var}): ?>
		${0:${VISUAL}}
	<?php endforeach ?>
snippet ?if
	<?php if ($${1:var}): ?>
		${0:${VISUAL}}
	<?php endif ?>
snippet class
	class ${1:`vim_snippets#Filename()`}
	{
		${0:${VISUAL}}
	}
snippet this
	$this->
snippet function
	function ${1}(${3})
	{
		${0:${VISUAL}}
	}
snippet method
	${1:protected} function ${2:foo}()
	{
		${0:${VISUAL}}
	}
snippet doc
	/**
	 * ${0}
	 */
snippet if "if (condition) { ... }"
	if (${1}) {
		${0:${VISUAL}}
	}
snippet ifelse "if (cond) { ... } else { ... }"
	if (${1}) {
		${0:${VISUAL}}
	} else {
		${2}
	}
snippet else "else { ... }"
	else {
		${0:${VISUAL}}
	}
snippet elseif "elseif(condition) { ... }"
	elseif (${1}) {
		${0:${VISUAL}}
	}
snippet for "for ($i = 0; $i < $count; $i++) { ... }"
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${0:${VISUAL}}
	}
snippet foreach "foreach ($var as $value) { .. }"
	foreach ($${1:variable} as $${2:value}) {
		${0:${VISUAL}}
	}
snippet array "$... = ['' => ]"
	$${1:arrayName} = ['${2}' => ${3}];
snippet try "try { ... } catch (Exception $e) { ... }"
	try {
		${0:${VISUAL}}
	} catch (${1:Exception} $e) {
	}
snippet pd
	echo '<pre>'; var_dump(${0}); echo '</pre>';
snippet pdd
	echo '<pre>'; var_dump(${1}); echo '</pre>'; die(${0:});
snippet vd
	var_dump(${0});
snippet vdd
	var_dump(${1}); die(${0:});
